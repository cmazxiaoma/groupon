<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.cmazxiaoma">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <context:component-scan base-package="com.cmazxiaoma.framework">
        <context:include-filter type="regex" expression="com.cmazxiaoma.framework..controller.*Aspect"/>
    </context:component-scan>

    <context:component-scan base-package="com.cmazxiaoma">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>

    <aop:aspectj-autoproxy/>

    <bean class="com.cmazxiaoma.framework.base.context.SpringApplicationContext"/>

    <bean id="performanceMonitor" class="org.springframework.aop.interceptor.PerformanceMonitorInterceptor"/>

    <aop:config proxy-target-class="true">
        <aop:advisor pointcut="execution(* com.cmazxiaoma..controller.*.*(..))" advice-ref="performanceMonitor"/>
        <aop:advisor pointcut="execution(* com.cmazxiaoma..controller.*Controller.*(..))" advice-ref="searchConditionAspect"/>
        <aop:advisor pointcut="execution(public * com.cmazxiaoma..service.*Service.*(..))" advice-ref="txAdvice"/>
    </aop:config>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="NEVER"/>
            <tx:method name="list*" propagation="NEVER"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driverClass}"/>
        <property name="url" value="${jdbcUrl}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="poolPreparedStatements" value="false"/>
        <property name="defaultAutoCommit" value="false"/>
        <!--maxActive: 最大连接数量-->
        <property name="maxActive" value="150"/>
        <!--minIdle: 最小空闲连接-->
        <property name="minIdle" value="5"/>
        <!--maxIdle: 最大空闲连接-->
        <property name="maxIdle" value="20"/>
        <!--initialSize: 初始化连接-->
        <property name="initialSize" value="30"/>
        <!-- 连接被泄露时是否打印 -->
        <property name="logAbandoned" value="true"/>
        <!--removeAbandoned: 是否自动回收超时连接-->
        <property name="removeAbandoned"  value="true"/>
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->
        <property name="removeAbandonedTimeout" value="10"/>
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于1秒-->
        <property name="maxWait" value="1000"/>
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
        <property name="numTestsPerEvictionRun" value="10"/>
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->
        <property name="minEvictableIdleTimeMillis" value="10000"/>
        <property name="validationQuery" value="select 1"/>
    </bean>

    <!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
            destroy-method="close"> -->
    <!-- <property name="driverClass" value="${driverClass}" /> -->
    <!-- <property name="jdbcUrl" value="${jdbcUrl}" /> -->
    <!-- <property name="user" value="${username}" /> -->
    <!-- <property name="password" value="${password}" /> -->
    <!-- <property name="acquireIncrement" value="10" /> -->
    <!-- <property name="acquireRetryAttempts" value="100" /> -->
    <!-- <property name="acquireRetryDelay" value="1000" /> -->
    <!-- <property name="autoCommitOnClose" value="false" /> -->
    <!-- <property name="breakAfterAcquireFailure" value="false" /> -->
    <!-- <property name="checkoutTimeout" value="0" /> -->
    <!-- <property name="initialPoolSize" value="100" /> -->
    <!-- <property name="maxIdleTime" value="10000" /> -->
    <!-- <property name="maxPoolSize" value="300" /> -->
    <!-- <property name="maxStatements" value="0" /> -->
    <!-- <property name="maxStatementsPerConnection" value="0" /> -->
    <!-- <property name="numHelperThreads" value="5" /> -->
    <!-- <property name="propertyCycle" value="600" /> -->
    <!-- </bean> -->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:com/cmazxiaoma/**/mapper/*.xml"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <!-- 	<import resource="applicationContext-xss.xml" /> -->
    <import resource="shiro.xml"/>

</beans>