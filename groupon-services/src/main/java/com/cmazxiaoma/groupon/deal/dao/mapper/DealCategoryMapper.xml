<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmazxiaoma.groupon.deal.entity.DealCategoryMapper">
    <resultMap id="BaseResultMap" type="com.cmazxiaoma.groupon.deal.entity.DealCategory">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="url_name" property="urlName" jdbcType="VARCHAR"/>
        <result column="publish_status" property="publishStatus" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="order_num" property="orderNum" jdbcType="INTEGER"/>
        <result column="deep" property="deep" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, parent_id, name, url_name, publish_status, create_time, order_num, deep
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from deal_category
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from
        deal_category
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insertSelective" parameterType="com.cmazxiaoma.groupon.deal.entity.DealCategory" useGeneratedKeys="true"
            keyProperty="id">
        insert into deal_category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="urlName != null">
                url_name,
            </if>
            <if test="publishStatus != null">
                publish_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="orderNum != null">
                order_num,
            </if>
            <if test="deep != null">
                deep,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="urlName != null">
                #{urlName,jdbcType=VARCHAR},
            </if>
            <if test="publishStatus != null">
                #{publishStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="deep != null">
                #{deep,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cmazxiaoma.groupon.deal.entity.DealCategory">
        update deal_category
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="urlName != null">
                url_name = #{urlName,jdbcType=VARCHAR},
            </if>
            <if test="publishStatus != null">
                publish_status = #{publishStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderNum != null">
                order_num = #{orderNum,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>


    <!-- 业务SQL -->
    <select id="selectAllWithoutDeleted" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from deal_category where
        publish_status != #{publishStatus,jdbcType=INTEGER}
        order by parent_id,order_num
    </select>
    <select id="selectDirectSubs" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deal_category where
        publish_status != #{publishStatus,jdbcType=INTEGER}
        and parent_id = #{parentId,jdbcType=BIGINT}
        order by order_num
    </select>
    <select id="selectPageCategories" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deal_category where 1=1
        <if test="parentId != null">
            and parent_id = #{parentId,jdbcType=BIGINT}
        </if>
        order by order_num
    </select>
    <select id="countPageCategories" resultType="java.lang.Long">
        select count(*)
        from deal_category where 1=1
        <if test="parentId != null">
            and parent_id = #{parentId,jdbcType=BIGINT}
        </if>
    </select>

    <!-- 查询某个商品类别下的子类别中最大的排序序号 -->
    <select id="selectMaxOrderByParentId" resultType="java.lang.Integer">
        select max(order_num) as maxOrder
        from deal_category where parent_id = #{parentId,jdbcType=BIGINT}
    </select>

    <select id="selectByUrlName" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from deal_category where url_name = #{urlName,jdbcType=VARCHAR}
    </select>

    <!-- 交换两个商品类别的排序序号 -->
    <update id="swapOrder" parameterType="java.util.Map">
        UPDATE deal_category a,deal_category b
        SET a.order_num=b.order_num, b.order_num=a.order_num
        WHERE a.id=#{id1,jdbcType=BIGINT} AND b.id=#{id2,jdbcType=BIGINT}
    </update>


</mapper>