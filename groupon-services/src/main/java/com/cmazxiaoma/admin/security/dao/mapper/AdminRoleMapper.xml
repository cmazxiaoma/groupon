<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmazxiaoma.admin.security.entity.AdminRoleMapper">
    <resultMap id="BaseResultMap" type="com.cmazxiaoma.admin.security.entity.AdminRole">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, create_time, update_time
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from admin_role
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from admin_role
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.cmazxiaoma.admin.security.entity.AdminRole">
        insert into admin_role (id, name,
        create_time, update_time)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.cmazxiaoma.admin.security.entity.AdminRole">
        insert into admin_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>

        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.cmazxiaoma.admin.security.entity.AdminRole">
        update admin_role
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM admin_role
        where 1 = 1
        <if test="name != null">
            and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="startTime != null">
            and create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null">
            and create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
        </if>
    </select>

    <select id="countPageAdminRoles" resultType="java.lang.Long" parameterType="java.lang.Integer">
        SELECT count(*) FROM admin_role
        where 1 = 1
        <if test="name != null">
            and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="startTime != null">
            and create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null">
            and create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
        </if>
    </select>

    <select id="findByIds" resultMap="BaseResultMap">
        Select
        <include refid="Base_Column_List"/>
        from admin_role where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>