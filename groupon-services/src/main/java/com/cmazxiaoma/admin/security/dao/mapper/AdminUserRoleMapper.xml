<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmazxiaoma.admin.security.entity.AdminUserRoleMapper">
    <resultMap id="BaseResultMap" type="com.cmazxiaoma.admin.security.entity.AdminUserRole">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="admin_user_id" property="adminUserId" jdbcType="BIGINT"/>
        <result column="admin_role_id" property="adminRoleId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, admin_user_id, admin_role_id, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from admin_user_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from admin_user_role
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.cmazxiaoma.admin.security.entity.AdminUserRole">
        insert into admin_user_role (id, admin_user_id, admin_role_id,
        create_time, update_time)
        values (#{id,jdbcType=BIGINT, #{adminUserId,jdbcType=BIGINT}, #{adminRoleId,jdbcType=BIGINT},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.cmazxiaoma.admin.security.entity.AdminUserRole">
        insert into admin_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="adminUserId != null">
                admin_user_id,
            </if>
            <if test="adminRoleId != null">
                admin_role_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="adminUserId != null">
                #{adminUserId,jdbcType=BIGINT},
            </if>
            <if test="adminRoleId != null">
                #{adminRoleId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cmazxiaoma.admin.security.entity.AdminUserRole">
        update admin_user_role
        <set>
            <if test="adminUserId != null">
                admin_user_id = #{adminUserId,jdbcType=BIGINT},
            </if>
            <if test="adminRoleId != null">
                admin_role_id = #{adminRoleId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cmazxiaoma.admin.security.entity.AdminUserRole">
        update admin_user_role
        set admin_user_id = #{adminUserId,jdbcType=BIGINT},
        admin_role_id = #{adminRoleId,jdbcType=BIGINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="batchInsertAdminUserRoles" parameterType="java.util.List">
        insert into admin_user_role
        (admin_user_id, admin_role_id, create_time, update_time)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.adminUserId,jdbcType=BIGINT},
            #{item.adminRoleId,jdbcType=BIGINT},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <delete id="deleteByUserId" parameterType="java.lang.Long">
        delete from admin_user_role where admin_user_id = #{adminUserId,jdbcType=BIGINT}
    </delete>

    <select id="findByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select * from admin_user_role where admin_user_id = #{adminUserId,jdbcType=BIGINT}
    </select>
</mapper>